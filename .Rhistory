.libPaths("C:/paketit")
knitr::opts_knit$set(root.dir = 'C:/Users/eeror/OneDrive/Tiedostot/GitHub/data-availability')
library(tidyverse)
db_all <- read.csv("db_all.csv")
db_all <- read.csv("data/db_all.csv")
db_dns <- read.csv("db_dns.csv")
db_all <- read.csv("data/db_all.csv")
db_dns <- read.csv("data/db_dns.csv")
hits_med_all <- read.csv("data/hits_med_all.csv")
hits_med_dns <- read.csv("data/hits_med_dns.csv")
library(pacman)
#install.packages("pacman")
p_load(tidyverse,lubridate, ggplot2,ggpubr,data.table)
#install.packages("pacman")
p_load(tidyverse,lubridate, ggplot2,ggpubr,data.table, tblsummary)
#install.packages("pacman")
p_load(tidyverse,lubridate, ggplot2,ggpubr,data.table, gtsummary)
round(fisher.test(merge(
table(db_all$Publons[db_all$firstPublicationDate %like% "2021"]) %>% as.data.frame(),
table(db_dns$Publons[db_dns$firstPublicationDate %like% "2021"]) %>% as.data.frame(),
by = "Var1", all = TRUE) %>% mutate(Freq.y = replace(Freq.y, is.na(Freq.y), 0)) %>% select(Freq.x, Freq.y),
simulate.p.value=TRUE,
hybrid=T,
B=100000
)$p.value, 3)
table(db_all$NLMCatalog[db_all$firstPublicationDate %like% "2021"]) %>% as.data.frame()
table(db_all$NLMCatalog[db_all$firstPublicationDate %like% "2021"])
table(db_all$NLMCatalog[db_all$firstPublicationDate %like% "2021"])
round(fisher.test(merge(
table(db_all$NLMCatalog[db_all$firstPublicationDate %like% "2021"]) %>% as.data.frame(),
table(db_dns$NLMCatalog[db_dns$firstPublicationDate %like% "2021"]) %>% as.data.frame(),
by = "Var1", all = TRUE) %>% mutate(Freq.y = replace(Freq.y, is.na(Freq.y), 0)) %>% select(Freq.x, Freq.y),
simulate.p.value=TRUE,
hybrid=T,
B=100000
)$p.value, 3)
round(fisher.test(merge(
table(db_all$SCImago[db_all$firstPublicationDate %like% "2021"]) %>% as.data.frame(),
table(db_dns$SCImago[db_dns$firstPublicationDate %like% "2021"]) %>% as.data.frame(),
by = "Var1", all = TRUE) %>% mutate(Freq.y = replace(Freq.y, is.na(Freq.y), 0)) %>% select(Freq.x, Freq.y),
simulate.p.value=TRUE,
hybrid=T,
B=100000
)$p.value, 3)
round(fisher.test(merge(
table(db_all$NLMCatalog[db_all$firstPublicationDate %like% "2021"]) %>% as.data.frame(),
table(db_dns$NLMCatalog[db_dns$firstPublicationDate %like% "2021"]) %>% as.data.frame(),
by = "Var1", all = TRUE) %>% mutate(Freq.y = replace(Freq.y, is.na(Freq.y), 0)) %>% select(Freq.x, Freq.y),
simulate.p.value=TRUE,
hybrid=T,
B=100000
)$p.value, 3)
round(fisher.test(merge(
table(db_all$NLMCatalog[db_all$firstPublicationDate %like% "2021"]) %>% as.data.frame(),
table(db_dns$NLMCatalog[db_dns$firstPublicationDate %like% "2021"]) %>% as.data.frame(),
by = "Var1", all = TRUE) %>% mutate(Freq.y = replace(Freq.y, is.na(Freq.y), 0)) %>% select(Freq.x, Freq.y),
simulate.p.value=TRUE,
hybrid=T,
B=100000
)$p.value, 3)
merge(
table(db_all$NLMCatalog[db_all$firstPublicationDate %like% "2021"]) %>% as.data.frame(),
table(db_dns$NLMCatalog[db_dns$firstPublicationDate %like% "2021"]) %>% as.data.frame(),
by = "Var1", all = TRUE) %>% mutate(Freq.y = replace(Freq.y, is.na(Freq.y), 0)) %>% select(Freq.x, Freq.y)
merge(
table(db_all$SCImago[db_all$firstPublicationDate %like% "2021"]) %>% as.data.frame(),
table(db_dns$SCImago[db_dns$firstPublicationDate %like% "2021"]) %>% as.data.frame(),
by = "Var1", all = TRUE) %>% mutate(Freq.y = replace(Freq.y, is.na(Freq.y), 0)) %>% select(Freq.x, Freq.y)
sci = merge(
table(db_all$SCImago[db_all$firstPublicationDate %like% "2021"]) %>% as.data.frame(),
table(db_dns$SCImago[db_dns$firstPublicationDate %like% "2021"]) %>% as.data.frame(),
by = "Var1", all = TRUE)
db_dns$SCImago[db_dns$firstPublicationDate %like% "2021"]
Vied(db_dns)
View(db_dns)
sci = merge(
(db_all$SCImago[db_all$firstPublicationDate %like% "2021"]) %>% as.data.frame(),
(db_dns$SCImago[db_dns$firstPublicationDate %like% "2021"]) %>% as.data.frame(),
by = "Var1", all = TRUE)
db_dns$SCImago
db_all <- merge(db_all, publishers, by.x = "journalTitle", by.y = "ï..Journal", all.x = T)
db_all <- read.csv("data/db_all.csv")
db_dns <- read.csv("data/db_dns.csv")
hits_med_all <- read.csv("data/hits_med_all.csv")
hits_med_dns <- read.csv("data/hits_med_dns.csv")
knitr::opts_knit$set(root.dir = 'C:/Users/eeror/OneDrive/Tiedostot/GitHub/data-availability')
#install.packages("pacman")
library(pacman)
p_load(tidyverse,lubridate, ggplot2,ggpubr,data.table, gtsummary)
db_all <- read.csv("data/db_all.csv")
db_dns <- read.csv("data/db_dns.csv")
hits_med_all <- read.csv("data/hits_med_all.csv")
hits_med_dns <- read.csv("data/hits_med_dns.csv")
data.frame(number_of_papers = nrow(db_all),
number_of_journals = nrow(table(db_all$journalTitle)))
data.frame(number_of_papers = nrow(db_dns),
nummber_of_journals = nrow(table(db_dns$journalTitle)))
db_all <- db_all %>%
mutate(year_firstpub = year(
as.POSIXlt(firstPublicationDate,
format = "%Y-%m-%d")
))
db_dns <- db_dns %>%
mutate(year_firstpub = year(
as.POSIXlt(firstPublicationDate,
format = "%Y-%m-%d")
))
trend_dent <- merge(count(db_dns, year_firstpub), count(db_all, year_firstpub), by = "year_firstpub")
colnames(trend_dent) <- c("year_firstpub", "data_not_shown", "all_fulltexts")
trend_dent <- mutate(trend_dent, pubYear_modified =
ifelse(year_firstpub < 1990, "< 1990",
ifelse((year_firstpub >= 1990) & (year_firstpub < 1995), "1990 - 1994",
ifelse((year_firstpub >= 1995) & (year_firstpub < 2000), "1995 - 1999",
year_firstpub))))
trend_dent <- trend_dent %>%
group_by(pubYear_modified) %>%
summarise(data_not_shown = sum(data_not_shown),
all_fulltexts = sum(all_fulltexts)) %>%
mutate(percentage = round(data_not_shown/all_fulltexts*100, 1))
plot_dent <- trend_dent %>%
ggplot() +
geom_col(aes(x = pubYear_modified,
y = data_not_shown),
size = 1,
fill = "cornflowerblue") +
geom_line(aes(x = pubYear_modified,
y = 10*percentage),
size = 1.2,
color="darkorange1",
linetype=2,group = 1) +
geom_text(aes(label = data_not_shown,
x = pubYear_modified,
y = data_not_shown+3),
color = "black",
size = 3.5) +
geom_text(aes(label = percentage,
x = pubYear_modified,
y = 10*percentage),
color = "black",
size=3) +
scale_y_continuous(sec.axis = sec_axis(~./10)) +
theme_bw() +
theme(axis.title.x=element_blank(), axis.text.x = element_blank()) +
theme(axis.title.y=element_blank()) +
labs(title = "A", x = "Year")
plot_dent
trend_med <- merge(hits_med_dns, hits_med_all, by = c("year"))
trend_med <- trend_med[, -c(2, 3, 5, 6)]
colnames(trend_med) <- c("pubYear", "data_not_shown", "all_fulltexts")
trend_med <- mutate(trend_med, pubYear_modified =
ifelse(pubYear < 1990, "< 1990",
ifelse((pubYear >= 1990) & (pubYear < 1995), "1990 - 1994",
ifelse((pubYear >= 1995) & (pubYear < 2000), "1995 - 1999",
pubYear))))
trend_med <- trend_med %>%
group_by(pubYear_modified) %>%
summarise(data_not_shown = sum(data_not_shown),
all_fulltexts = sum(all_fulltexts)) %>%
mutate(percentage = round(data_not_shown/all_fulltexts*100, 1))
plot_med <- trend_med %>%
ggplot() +
geom_col(aes(x = pubYear_modified,
y = data_not_shown),
size = 1,
fill = "cornflowerblue") +
geom_line(aes(x = pubYear_modified,
y = 2000*percentage),
size = 1.2,
color="darkorange1",
linetype=2,group = 1) +
geom_text(aes(label = percentage,
x = pubYear_modified,
y = 2000*percentage),
color = "black",
size=3) +
scale_y_continuous(sec.axis = sec_axis(~./2000)) +
guides(x =  guide_axis(angle = 45), y = guide_axis(angle = 74)) +
theme_bw() +
theme(axis.title.y=element_blank()) +
labs(title = "B", x = "Year")
plot_med
figure <- ggarrange(plot_dent, plot_med + font("x.text", size = 10),
ncol = 1, nrow = 2)
anfig <- annotate_figure(figure,
left = text_grob("The number of articles with data not shown", color = "black", rot = 90),
right = "Percentage",
)
# tiff("Figure.tif", units = "cm", height = 31, width = 20, res = 300)
anfig
# dev.off()
data.frame(total_hits = nrow(
filter(db_all,
grepl("2021", firstPublicationDate))),
total_journals = length(
unique(
filter(db_all,
grepl("2021",
firstPublicationDate))
$journalTitle))
)
publishers <- read.csv("data/publishers.csv")
db_all <- merge(db_all, publishers, by.x = "journalTitle", by.y = "ï..Journal", all.x = T)
db_dns <- merge(db_dns, publishers, by.x = "journalTitle", by.y = "ï..Journal", all.x = T)
data.frame(
total_papers = nrow(filter(db_dns, grepl("2021", firstPublicationDate))),
percentage = round(nrow(filter(db_dns, grepl("2021", firstPublicationDate)))/nrow(filter(db_all, grepl("2021", firstPublicationDate)))*100, 1),
total_journals = length(unique(filter(db_dns, grepl("2021", firstPublicationDate))$journalTitle)),
total_publishers = length(unique(filter(db_dns, grepl("2021", firstPublicationDate))$Publons))
)
round(fisher.test(merge(
table(db_all$journalTitle[db_all$firstPublicationDate %like% "2021"]) %>% as.data.frame(),
table(db_dns$journalTitle[db_dns$firstPublicationDate %like% "2021"]) %>% as.data.frame(),
by = "Var1", all = TRUE) %>% mutate(Freq.y = replace(Freq.y, is.na(Freq.y), 0)) %>% select(Freq.x, Freq.y),
simulate.p.value=TRUE,
hybrid=T,
B=100000
)$p.value, 3)
table(db_dns$journalTitle[db_dns$firstPublicationDate %like% "2021"])
merge(
table(db_all$journalTitle[db_all$firstPublicationDate %like% "2021"]) %>% as.data.frame(),
table(db_dns$journalTitle[db_dns$firstPublicationDate %like% "2021"]) %>% as.data.frame(),
by = "Var1", all = TRUE) %>% mutate(Freq.y = replace(Freq.y, is.na(Freq.y), 0)) %>% select(Freq.x, Freq.y)
merge(
table(db_all$journalTitle[db_all$firstPublicationDate %like% "2021"]) %>% as.data.frame(),
table(db_dns$journalTitle[db_dns$firstPublicationDate %like% "2021"]) %>% as.data.frame(),
by = "Var1", all = TRUE) %>% mutate(Freq.y = replace(Freq.y, is.na(Freq.y), 0)) %>% select(Freq.x, Freq.y) %>% tbl_summary()
View(db_dns)
db_total = merge(db_all,db_dns,all=T)
db_dns$datanotshown = 1
db_total = merge(db_all,db_dns,all=T)
db_dns$datanotshown = 1
db_total = merge(db_all,db_dns,all=T)
db_total$datanotshown = ifelse(is.na(db_total$datanotshown),0,db_total$datanotshown)
db_total %>% select(datanotshown,journalTitle) %>% filter(firstPublicationDate %like% "2021")
db_total  %>% filter(firstPublicationDate %like% "2021") %>% select(datanotshown,journalTitle)
db_total  %>% filter(firstPublicationDate %like% "2021") %>% select(datanotshown,journalTitle) %>%
tbl_summary()
db_total  %>% filter(firstPublicationDate %like% "2021") %>% select(datanotshown,journalTitle) %>%
tbl_summary(by=journalTitle)
?tbl_summary
db_total  %>% filter(firstPublicationDate %like% "2021") %>% select(datanotshown,journalTitle) %>%
tbl_summary(by=journalTitle, label = list(datanotshown ~ "Data not shown")) %>% add_p()
db_total  %>% filter(firstPublicationDate %like% "2021") %>% select(datanotshown,journalTitle) %>%
tbl_summary(by=journalTitle, label = list(datanotshown ~ "Data not shown")) %>% add_p(simulate.p.value=TRUE)
?add_p
db_total  %>% filter(firstPublicationDate %like% "2021") %>% select(datanotshown,journalTitle) %>%
tbl_summary(by=journalTitle, label = list(datanotshown ~ "Data not shown")) %>% add_p(test.args = simulate.p.value=TRUE)
db_total  %>% filter(firstPublicationDate %like% "2021") %>% select(datanotshown,journalTitle) %>%
tbl_summary(by=journalTitle, label = list(datanotshown ~ "Data not shown")) %>% add_p(test.args ~ simulate.p.value=TRUE)
db_total  %>% filter(firstPublicationDate %like% "2021") %>% select(datanotshown,journalTitle) %>%
tbl_summary(by=journalTitle, label = list(datanotshown ~ "Data not shown")) %>% add_p(test.args ~ "simulate.p.value=TRUE")
db_total  %>% filter(firstPublicationDate %like% "2021") %>% select(datanotshown,journalTitle) %>%
tbl_summary(by=journalTitle, label = list(datanotshown ~ "Data not shown")) %>% add_p(test = list(all_categorical() ~ "fisher.test.simulate.p.values"))
db_total  %>% filter(firstPublicationDate %like% "2021") %>% select(datanotshown,journalTitle) %>%
tbl_summary(by=journalTitle, label = list(datanotshown ~ "Data not shown")) %>% add_p(test.args=all_tests("fisher.test") ~ list(simulate.p.value=TRUE))%>%
as_flex_table()
?tbl_summary
db_total  %>% filter(firstPublicationDate %like% "2021") %>% select(datanotshown,Publons) %>%
tbl_summary(by=Publons, label = list(datanotshown ~ "Data not shown")) %>% add_p(test.args=all_tests("fisher.test") ~ list(simulate.p.value=TRUE))%>%
as_flex_table()
db_total  %>% filter(firstPublicationDate %like% "2021") %>% select(datanotshown,NLMCatalog) %>%
tbl_summary(by=NLMCatalog, label = list(datanotshown ~ "Data not shown")) %>% add_p(test.args=all_tests("fisher.test") ~ list(simulate.p.value=TRUE))%>%
as_flex_table()
db_total  %>% filter(firstPublicationDate %like% "2021") %>% select(datanotshown,SCImago) %>%
tbl_summary(by=SCImago, label = list(datanotshown ~ "Data not shown")) %>% add_p(test.args=all_tests("fisher.test") ~ list(simulate.p.value=TRUE))%>%
as_flex_table()
